name: Deploy to Fly.io on Push or PR to Main

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Set environment secrets
        run: |
          flyctl secrets set BACKEND="${{ secrets.BACKEND }}" --app "${{ secrets.FLY_APP_NAME }}"
          flyctl secrets set RUST_LOG="${{ secrets.RUST_LOG }}" --app "${{ secrets.FLY_APP_NAME }}"
          flyctl secrets set SERVER_PORT="${{ secrets.SERVER_PORT }}" --app "${{ secrets.FLY_APP_NAME }}"
          flyctl secrets set EMAIL_CLIENT_ID="${{ secrets.EMAIL_CLIENT_ID }}" --app "${{ secrets.FLY_APP_NAME }}"
          flyctl secrets set EMAIL_CLIENT_SECRET="${{ secrets.EMAIL_CLIENT_SECRET }}" --app "${{ secrets.FLY_APP_NAME }}"
          flyctl secrets set EMAIL_ACCESS_TOKEN="${{ secrets.EMAIL_ACCESS_TOKEN }}" --app "${{ secrets.FLY_APP_NAME }}"
          flyctl secrets set EMAIL_REFRESH_TOKEN="${{ secrets.EMAIL_REFRESH_TOKEN }}" --app "${{ secrets.FLY_APP_NAME }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_IO_DEPLOY_TOKEN }}

      - name: Deploy to Fly.io
        run: |
          flyctl deploy --remote-only --build-target $(find target/x86_64-unknown-linux-musl/release -type f -name '*')
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_IO_DEPLOY_TOKEN }}
