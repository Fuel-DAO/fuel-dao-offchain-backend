name: Build and Check Linting with Nix

on:
  workflow_call:
    inputs:
      publish-artifact:
        default: false
        required: false
        type: boolean
  workflow_dispatch:
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: build check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Nix
        run: |
          curl -L https://nixos.org/nix/install | sh
          . $HOME/.nix-profile/etc/profile.d/nix.sh
          nix-channel --add https://nixos.org/channels/nixpkgs-unstable
          nix-channel --update

      - name: Set up Nix environment
        run: |
          nix-shell --pure -p rustup protobuf_21 muslTools openssl x86_64-linux-musl-gcc --run "rustup install stable && rustup default stable"

      - name: Build setup
        run: |
          nix-shell --pure -p rustup muslTools --run "
            rustup target add x86_64-unknown-linux-musl
            rustup component add rustfmt
            rustup component add clippy
          "

      - name: Lint check
        run: |
          nix-shell --pure -p rustup muslTools --run "
            cargo fmt --check
            cargo clippy --no-deps --all-features --release -- -D warnings
          "

      - name: Build
        run: |
          nix-shell --pure -p rustup muslTools --run "
            TARGET_CC=x86_64-linux-musl-gcc cargo build --release --target x86_64-unknown-linux-musl
          "
        env:
          TARGET_CC: x86_64-linux-musl-gcc

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        if: ${{ inputs.publish-artifact }}
        with:
          name: build-musl
          path: |
            $(find target/x86_64-unknown-linux-musl/release -type f -name '*')
